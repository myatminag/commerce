model Notification {
  id            String             @id @default(cuid())
  message       String
  type          NotificationType
  status        NotificationStatus @default(UNREAD)
  recipientType RecipientType
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  userId        String
  user          User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  adminId       String
  admin         Admin              @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@map("notification")
}

enum NotificationStatus {
  READ
  UNREAD
  ARCHIVE
}

enum NotificationType {
  ORDER_CONFIRMATION
  ORDER_SHIPPED
  ORDER_DELIVERED
  ORDER_CACNELLED
  NEW_ORDER_RECEIVED
  OUT_OF_STOCK
  LOW_STOCK_ALERT
  NEW_PROMOTION
  DISCOUNT_EXPIRY_ALERT
  PAYMET_CONFIRMATION
  PAYMENT_FAILED
  PASSWORD_CHANGE_CONFIRMATION
  SYSTEM_MAINTENANCE_ALERT
  FEATURE_UPDATES
  POLICY_UPDATES
}

enum RecipientType {
  USER
  ADMIN
}
