model Notification {
  id             String              @id @default(cuid())
  message        String
  type           notification_type
  status         notification_status @default(unread)
  recipient_type recipient_type
  created_at     DateTime            @default(now())
  updated_at     DateTime            @updatedAt
  user_id        String
  user           User                @relation(fields: [user_id], references: [id], onDelete: Cascade)
  admin_id       String
  admin          Admin               @relation(fields: [admin_id], references: [id], onDelete: Cascade)
  tenant_id      String
  tenant         Tenant              @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@index([tenant_id])
  @@map("notification")
}

enum notification_status {
  read
  unread
  archive
}

enum notification_type {
  order_confirmation
  order_shipped
  order_delivered
  order_canceled
  new_order_received
  out_of_stock
  low_stock_alert
  new_promotion
  discount_expiry_alert
  payment_confirmation
  payment_failed
  password_change_confirmation
  system_maintenance_alert
  feature_updates
  policy_updates
}

enum recipient_type {
  user
  admin
}
