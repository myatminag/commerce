model Notification {
  id             String             @id @default(cuid())
  message        String
  type           NotificationType
  status         NotificationStatus @default(UNREAD)
  recipient_type RecipientType
  created_at     DateTime           @default(now())
  updated_at     DateTime           @updatedAt
  user_id        String
  user           User               @relation(fields: [user_id], references: [id], onDelete: Cascade)
  admin_id       String
  admin          Admin              @relation(fields: [admin_id], references: [id], onDelete: Cascade)

  @@map("notification")
}

enum NotificationStatus {
  READ
  UNREAD
  ARCHIVE
}

enum NotificationType {
  ORDER_CONFIRMATION
  ORDER_SHIPPED
  ORDER_DELIVERED
  ORDER_CACNELLED
  NEW_ORDER_RECEIVED
  OUT_OF_STOCK
  LOW_STOCK_ALERT
  NEW_PROMOTION
  DISCOUNT_EXPIRY_ALERT
  PAYMET_CONFIRMATION
  PAYMENT_FAILED
  PASSWORD_CHANGE_CONFIRMATION
  SYSTEM_MAINTENANCE_ALERT
  FEATURE_UPDATES
  POLICY_UPDATES
}

enum RecipientType {
  USER
  ADMIN
}
