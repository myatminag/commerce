model Notification {
  id            String             @id @default(cuid())
  message       String
  type          NotificationType
  status        NotificationStatus @default(unread)
  recipientType RecipientType
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  userId        String
  user          User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  adminId       String
  admin         Admin              @relation(fields: [adminId], references: [id], onDelete: Cascade)
}

enum NotificationStatus {
  read
  unread
  archive
}

enum NotificationType {
  order_confirmation
  order_shipped
  order_delivered
  order_canceled
  order_recevied
  out_of_stock
  low_stock
  promotion
  discount_expired
  payment_confirmation
  payment_failed
  password_change_confirmation
  system_maintenance
  feature_updates
  policy_updates
}

enum RecipientType {
  user
  admin
}
