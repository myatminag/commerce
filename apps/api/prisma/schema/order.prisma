model Order {
  id              String        @id @default(cuid())
  order_no        String        @unique
  order_items     OrderItems[]
  user_id         String
  user            User          @relation(fields: [user_id], references: [id])
  cart_id         String        @unique
  cart            Cart          @relation(fields: [cart_id], references: [id])
  delivery_fee    Int
  tax             Int
  item_count      Int
  sub_total_price Int
  total_discount  Int
  total_price     Int
  total_weight    Int
  order_status    OrderStatus
  order_note      String?
  payment_method  PaymentMethod
  currency        Currency
  invoice         Invoice?
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  tenant_id       String
  tenant          Tenant        @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@index([tenant_id], type: Hash)
  @@map("order")
}

model OrderItems {
  id         String   @id @default(cuid())
  quantity   Int      @default(1)
  price      Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  order_id   String
  order      Order    @relation(fields: [order_id], references: [id])
  product_id String
  product    Product  @relation(fields: [product_id], references: [id])

  @@map("order_items")
}

enum OrderStatus {
  pending
  confirmed
  shipped
  delivered
  cancelled
}
