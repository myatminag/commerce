model Order {
  id            String       @id @default(cuid())
  orderNo       String       @unique
  orderItems    OrderItems[]
  userId        String
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  cartId        String       @unique
  cart          Cart         @relation(fields: [cartId], references: [id])
  deliveryFee   Int
  tax           Int
  itemCount     Int
  subTotalPrice Int
  totalDiscount Int
  totalPrice    Int
  totalWeight   Int
  orderStatus   OrderStatus
  orderNote     String?
  orderDate     DateTime
  currency      Currency
  invoice       Invoice?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  payment       Payment?

  @@index([orderStatus])
  @@index([orderDate])
  @@map("order")
}

model OrderItems {
  id        String   @id @default(cuid())
  quantity  Int      @default(1)
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])

  @@map("order_items")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}
